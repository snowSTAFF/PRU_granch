#ifndef _RECIVE_HP_
#define _RECIVE_HP_

.macro RMACROS			// Прием макроса вида 0 0000 0001 1110 0010
.mparam IN, DATA, SPEED		// Параметры: IN - выбор входного порта (регистра). DATA - указани регистра приема
				//SPEED - выбор скорости приема. 11 - 0.5 Мбит/c, 1 ~ 5 Мбит/c. 
WORK:				// Метка инициализации
				// Считаем, что в уровень логического 0-я.
	MOV R20, 0		// Считает биты
	MOV R21, 0		// Считает байты
	WBS IN			// Прием первого нуля
	WBC IN			// Приход 0-я означает то, что пришел первый бит. 
	QBA START		// Переход на стартовую метку
CONTROL:			// Метка подсчета битов
	ADD R20, R20, 1		// Cчетчик битов
	QBEQ WRITE, R20, 8	// Если пришел байт, то переходим на метку WRITE
START:				// Метка начала приема				
	CDELAY SPEED		// Алгоритм приема: слушаем линию на 1/4 времени и 3/4 времени. 
	QBBS COME1, IN		// Слушаем линию. Если пришел 0 - то на COME0, если пришла 1 - то на COME1.
COME0:					
	CDELAY SPEED*2		// Слушаем в 3/4 времени. До этого был 0
	QBBC SET00, IN		// Слушаем, если придет 0, то установка 0. Если 1-а, то установка 1-цы.
SET11:				// Установка 1-ы, сдвиг и ожидание прихода фронта. +1 бит
	SET DATA.t0			
	LSL DATA, DATA, 1			
	WBC IN			
	QBA CONTROL			
SET10:				// Аналогично c SET11.
	SET DATA.t0			
	LSL DATA, DATA, 1		
	WBS IN			
	QBA CONTROL			
COME1:				// Аналогично с COME0. 
	CDELAY SPEED*2 			
	QBBS SET01, IN			
	QBA SET10
SET01:
	CLR DATA.t0
	LSL DATA, DATA, 1	
	WBC IN
	QBA CONTROL
SET00:
	CLR DATA.t0
	LSL DATA, DATA, 1	
	WBS IN
	QBA CONTROL
WRITE:				// Метка контроля. 
	ADD R21, R21, 1		// увеличение кол-ва байт на единицу. 
	MOV R20, 0		// обнуление числа бит
	QBEQ END, R21, 2	// Ждем приема 2-ух байт
	QBA START
END:
	LSR DATA, DATA, 1	// Учет последнего сдвига влево. Компенсация
.endm

#endif //_RECIVE_HP_
